1. MS-DOS
 Microsoft Disk Operating System

Microsoft Window 11
	Closed Source
	Its not free. We have to take lic

Linux OS
1. Open Source 
	Any body can see the source code
2. Free to use


Linux

Linus Toravald ----> Unix

Linu + x = Linux


Debian OS is parent
Ubuntu OS is child



Older Times
If you want to work on Virtual OS
1.VMware
2.Oracle VirtualBox

New Gen
1. Docker


Tools to manage source code.
To secure code on cloud
1. HTML


Git and GitHub

Git is a software
GitHub is a website


1. Git Tool/Software
	1.1 Git SCM
		Source Code Manager
2. GitHub Website (Microsoft Owned)
	2.1 Code


git --version
2.49.0
MajorNo.MinroNo.PatchNo

Dev+Ops Engineers
Development Plus Operations

Toots for a Deveoper
1. Git SCM
2. VS Code Editor

Today we will learn How to manage our source code

1. Go to D Drive
2. Create DevOps2025 Folder
3. Go Inside that folder
4. Create Current Directory folder
5. Go inside that folder
6. right click "open git bash here"
7. code .   -> will open VS Code Editor with current folder structure
8. Ctrl + Shift + `
9. Lets create a file using touch command
    9.1 touch <filename>
    9.2 vi <filename>
        visual Editor
    9.3 vim <filename>
        visual Editor Improved
        Type I to go inside Insert Mode
        Esc : w q enter

9.1 How to remove a file in Linux OS ?
    rm <file/folder>

10. How to create a directory in Linux OS ?
    mkdir <dirname>
11. How to remove a directory in Linux OS ?
    rmdir <dirname>

Linux OS Commands
1. Touch -> To create file
2. Mkdir -> To create folder/Directory
Make  -> To Create something


Auto Completion
  Write few letters and then press Tab Key

1. VIM Editor Modes

	There are 2 modes
	1.1 Insert Mode  -> I
	1.2 Command Mode -> Esc
		1.2.1 : 
                        w -> Save
			q -> Quit
              Esc : w q enter

2. How to create/Upload Repo to GitHub
	2.1 Go to gitHub.com/new

	5 Git Commands to upload to GitHub
	
	git init
        git remote add origin <repoLink>
	
	git add .    Stagging
        git commit -m "Message"    Committing
	git push origin <branchName>


3. Buy a domain from GoDaddy
	~130 inr/year

4. Buy a VPS from Contabo
	~500 inr/month

If you want to become a DevOps Engineer
1. Own Domain
2. Own Server
	
Where we can buy/Purchase Server ?
	1. Contabo
	2. OVH
	3. Hetzner

	4. AWS
	5. GCP
	6. Microsoft AZure

Once you buy server
1. Server IP
2. Server Port
3. Username
4. Password


Server IP   = 65.108.149.166
Server Port = 22 (SSH)
Username    = root
Password    = id_rsa

id_rsa.zip

1. GO To C Drvie
2. Go inside Users
3. Go Inside <username> my case. himsu
4. Paste id_rsa.zip
5. right click  -> WinRAR -> extract here...
6. win + r
7. cmd
8. How to connect with remote server ?


pwd = Present Working Directory
cd = change directory

Permission String
lrwxrwxrwx = Symbolic Link / ShortCut (File)
drwxrwxrwx = Directory
-rwxrwxrwx = File


0. How to show the content of a file ?
   cat <filename>

1. How i can check which OS i am working on ?
	1.1  cat /etc/os-release

2. How to check my server IP on the server ?
	2.1  hostname -I
	

3. How to change my HostName ?
	3.1 hostname <newHostName>
	    hostname anil
	
4. How to remove everything in VIM ?
	Esc : %d

5. How to delete a line in VIM
	Esc dd

6. What is Client Server Architecture ?

7. How to install a WebServer on your server ?
	7.1 Apache
		7.1.1 apt install apache2 
		      apt remove apache2

How to check if apache is installed and running ?
	7.1. systemctl status apache2
	7.2  IP -> Open in browser

apt -> Advanced Package Tool
			
	7.2 Ngnix

Windows -> file.exe / file.msi
LinuxOS  ->  apt


7.2 As soon you install Apache it will create directory

Before Apache install
	/var
After Apache install
	/var/www/html


Harsh -> /var/www/html/snenmh.xyz/index.html
Vijay -> /var/www/html/vijayji.xyz/index.html


http://65.108.149.166/  -> /var/www/html/


ls -al
command -flags

rm -rf <file/dir>
r  = Recursive
f = Forcefully


Why /var/www/html directory is so important for website ?

/var/www/html is a standard directory location where we can put our website code.



	
8. How to clone/Download your GitHub repo on Server?
	/var/www/html/yourdomain
	git clone <repoLink> -b <branchName> <Location>

9. How to point our domain to our ServerIP ?

DNS Management
Domain Name System

https://snenmh.xyz  ----> IP Address

https://google.com  --- > IP Addr ???

WebSites HOST Server

Domain + Server(IP)

Domain Name System -> GoDaddy -> Domain Panel -> Login

DNS

Harsh Domain Username and Password ?
Vijay Domain Username and Password ?

snenmh.xyz
username:- katariyaharsh09@gmail.com
password:- 
  

snenmh.xyz   ---- Domain Panel----->Add A Record --->    65.108.149.166

10 . How to check if our domain is pointing to our server ?

Win + R -> cmd -> ping snenmh.xyz -t


DNS Propagation Time  -> -> Min 0Sec, Max 48Hrs


How we can point our Domain to our server IP very fast ?

1. Flush Google DNS Public Cache
	https://developers.google.com/speed/public-dns/cache
	https://dns.google/cache
2. cmd
	ipconfig /flushdns



Lets point our site to /var/www/html/snenmh.xyz

Client Server Architecture

Client ----------> Request ---------->Server -> (WebServer i.e Apache)

Chrome -> http://snenmh.xyz ----->DNS----> 65.108.149.166 -> Apache Configure 
							snenmh.xyz  -> /var/www/html/snenmh.xyz

Chrome -> http://vijayji.xyz ----->DNS----> 65.108.149.166 -> Apache Configure 
							vijayji.xyz  -> /var/www/html/vijayji.xyz

Apache VirtualHost
1. /etc/apache2/sites-available/snenmh.xyz.conf
<VirtualHost *:80>
        	ServerName /snenmh.xyz
		DocumentRoot /var/www/html/snenmh.xyz
</VirtualHost>

2. Actiate the configuration file
	a2ensite snenmh.xyz.conf
 	a2ensite
	apache2 enable site
3. systemctl reload apache2

4. Google Chrome
     http://snenmh.xyz  -> Website Open

5. How we can check if our domain is pointing to our server or not ?
    5.1 ping snenmh.xyz -t



Hypertext Transfer Protocol -> Port NO  -> 80
	http://snenmh.xyz

Hypertext Transfer Protocol Secured -> PortNo 443
https://snenmh.xyz

You need SSL Certificates
1. Buy SSL 
2. Free SSL -> Letsencrypt



SSH -> Port No 22




65.108.149.166


certbot   ------Request --------->Letsencrypt
certbot  <------ SSL ---------   Letsencrypt

SSL Certificates
1. fullchain.pem
2. privkey.pem


90 Days Valid
Before 90 Days i need to Renew it


I want Custom Nameservers.

DNS Records  -> Godaddy  -> 48hrs


DNS Records  -> My Own Custom Nameservers -> Fast Propogation time




48hrs --> 10sec


FreeDNS Provider
1. http://freedns.centos-webpanel.com/login.php




How to check who is managing your DNS Records?
GoDaddy ?
Someone other ?

1. Harsh -> snenmh.xyz -> GoDaddy
2. Vijay -> vijayji.xyz -> freedns.centos-webpanel.com
2. Anil  -> anil.xyz


intodns.com -> anil.xyz


How to create subdomain ?

vijayji.xyz -> 123 inr /year

https://web.whatsapp.com/
https://subdomain1.vijayji.xyz


https://june26-2025.vijayji.xyz  -> 65.108.149.166 -> /var/www/html/june26-2025.vijayji.xyz/index.html

https://june26-2025.snenmh.xyz   -> 65.108.149.166 -> /var/www/html/june26-2025.snenmh.xyz/index.html



Client Server Architecture


Client -----------------------REquest --------------------> Server (Webserver Nginix/Apache)
							Apache VirtualHost

/etc/apache2/sites-available/june26-2025.snenmh.xyz.conf


How you can create Subdomain ?

How to create users in Linux?
How to host their websites in their home directories?

What are the typical locations where we can host a website?
What are the common directories used to host a website on a Linux system?

1. /var/www/html/<website>/index.html
2. /home/<username>/public_html/

Who can create Other Linux Users ?
How we can check users in Linux OS ?


Server -> 65.108.149.166
1. Harsh  /home/harsh/public_html/june27-2025.snenmh.xyz/index.html
	How you can create Subdomain ?
	/etc/apache2/sites-available/june27-2025.snenmh.xyz.conf

Harsh  /home/harsh/public_html/june27-2025.snenmh.xyz/index.html

Vipin
	/home/Vipin/public_html/vipin-june27-2025.snenmh.xyz/index.html

2. Vijay  /home/vijay/public_html/june27-2025.vijayji.xyz



How to change Ownership of a directory ?
chown -R <user>:<group> <location>

- U  G  O
- User Group Other
-rw-r--r--
-rwxrwxrwx

r =read
w =write
x = execute

change Mode
chmod -R 755 <location>


chown -R www-data:www-data public_html/
chown -R     user:group    public_html/

chown -R www-data:www-data public_html/
chown -R     user:group    public_html/


https://harsh1-june27-2025.snenmh.xyz/ 

Should point to 

/home/harsh1/public_html/harsh1-june27-2025.snenmh.xyz/index.html
/home/harsh1/public_html/harsh1-june27-2025.snenmh.xyz


/etc/apache2/sites-available/

ugo
755


systemctl status apache2

active


apachectl configtest


systemctl restart apache2
systemctl reload apache2


anil ---> root

sudo su
s -> switch
u -> user

How we can give normal user full privileges?

anil

sudo usermod -aG sudo anil

Window -> Administrator
Linux  -> root
MacOs  -> root

File Permission

Permission String
-rwxrwxrwx
----------

-rw-r--r--
- U  G  O
- 7  7  7
- 0  0  0

1. Read
    Cat <filename>
2. Write
     vim <filename>
3. Execute
      sh  <shellFile>   ShellScripting


How can you jump into other users shell?

user1
user2

user1  --> user2

su - <userName>
root ----> Harsh

su - harsh

switch User - <UserName>


root   -----> Harsh

Linux is Case Sensitive

harsh.txt
Harsh.txt

h !== H

In Linux, Which File you can execute ?
1. ShellScripting Files
2. Python
3. Java
5. Go

ShellScripting Files

anil.sh

#!/bin/bash

echo 'Hello'


65.108.149.166   -> Software/Website
65.108.149.167


docker.com -> Account Registration
hub.docker.com


Docker -> Image -> hub.docker.com

Photo  ----------> Google Drive
Code ------------> GitHub
Docker-> Image -----> hub.docker.com


hub.docker.com -> Docker Registry


anil Image -------> Docker Registry -> hub.docker.com  


SignUp -> Register 
SingIn -> Login



You want to work on Docker on the server ?

Docker install ?

systemctl status docker

Start   		--->    Stop    ----> Remove
active (running)  	--->    inactive (dead)


systemctl status docker
systemctl stop docker



apt remove docker

apt-get purge docker

27.5.1
Major.Minor.Patch


Docker changelog
Apache2 changelog

Package Manager

1. APT
2. Snap

sudo apt-get install --reinstall docker.io -y
65.108.149.166



Docker Architecture
1. Docker Client   -> 	Black Terminal
2. Docker Daemon   -> 	systemctl status docker
3. Docker Registry -> 	https://hub.docker.com

How to check if the OS Image is available on our server?


How to check if the OS Image is available on our server?

All Docker Command you can run in 2 Modes
1. Long Command Mode
	docker image ls
2. Sort COmmand Mode
	docker images

OS Image   -------> Multiple Containers

Hardware Vendor

Pendrive ----> OS Image  ---> Custom1,2,3,4

How you can create containers from OS Image?


OS Image ---> Container

docker run -p 8080:80 -d debian:latest
d43bca1f97c24b97fae3885303728d474b4b300f299ff9ea976382fb2a7d6b2d



OS Image <--- Container





anil   -flag1    -flag2
anil   -flag2	 -flag1

docker run -p hp:cp -d account/image:tag
docker run -p 80:80 -d debian/Debian:latest  



docker run  -d    -p


What are possible values of Port Nos on computer?

0  -    65535


Server --> Single Service 


How to check docker images ?
	docker image ls
	docker images

How to check docker containers ?
	docker container ps -a       ps-process  a-all
	docker ps -a

65.108.149.166

How to make a container up and running ?

docker run -p 80:80 -d debian/deb

ctrl + F   Find
up and running

docker run -it -u root --privileged -d ubuntu:latest
docker run -u root --privileged  -it -d debian:latest


docker run -u root --privileged  -it -d kalilinux/kali-rolling:latest


docker run ?
Image -> Container(Up and Running)


If your contain is up and running ?

1.	Go inside container
  	docker container exec -i -t contId shell
2.	Go outside container
	exit

 Host OS    -----> Container OS


Find out Host OS ?
Find our Container OS ?

Where you are  ?

You are inside Host OS 
	


What is your sever RAM ?
	free -h
What is your server storage capacity ?
	df -H

What is Linux Shell ?

1.	BASH

Bourn Again Shell

deepak:x:1027:1027::/home/deepak:/bin/sh
anil:x:1027:1027::/home/deepak:/bin/bash

65.108.149.166:8080   --->  container ---> /var/www/html/index.html


65.108.149.166:70000

docker run -p 60000:80  -u root --privileged  -it -d debian:latest

docker ps
	PORT
0.0.0.0:60000->80/tcp


65.108.149.166

https://snenmh.xyz  --> HOST Machine ---> /var/www/html/snenmh.com/index.html 
https://vijayji.xyz --> HOST Machine ---> /var/www/html/vijayji.com/index.html 



https://snenmh.xyz  --> Container 8080 ---> /var/www/html/snenmh.com/index.html 
https://vijayji.xyz --> Container 8081 ---> /var/www/html/vijayji.com/index.html 



How you can stop a docker container ?
	docker container stop <contId/contName>

How you can stop all docker container in a single command ?
	docker container stop $(docker ps -aq)

How you can remove all docker container in a single command ?
	docker container rm $(docker ps -aq)




Every Application that we deploy on the server should be in 
Docker Container.


Setup MySQL(Database) and PhpMyAdmin using Reverse Proxy


Long Command
	docker image pull mysql:latest
Short Command
	docker pull mysql:latest


docker image pull phpmyadmin:latest
docker pull phpmyadmin:fpm-alpine



Database + GUI (Graphical User Interface)

MySQL    + PhpMyAdmin


Image   ----> Containers


docker run -d \
  --name mysql-container \
  -e MYSQL_ROOT_PASSWORD=my-secret-pw \
  -e MYSQL_DATABASE=mydb \
  -e MYSQL_USER=myuser \
  -e MYSQL_PASSWORD=mypassword \
  -p 3306:3306 \
  mysql:latest

docker run -d -e MYSQL_ROOT_PASSWORD=123 -p 3306:3306 mysql:latest


e = environment

Column1 Column2
Name	Surname
Anil 	Dollor

Database ---> Table -----> Data(Anil Dollor)


How to go inside a Database?

use <databaseName>;


a_db
    a_tbl



1.	Database banao
	create database <dbName>;
2.	Database show karo
	show databases;
3.	Tables Banao
	create table 
4.	Tables show karo
	 show tables;
5.	Table structure show karo
	explain <tableName>;
6. Store information
	insert into
7. Show the stored information
	select * from <tableName>;

How to setup MySQL Database Docker container ?

docker image pull mysql:latest
docker image pull mariadb:latest

docker image pull mariadb:latest

Ctrl + F = Find	

SQL Command
 Database
	Tables
	      Data

docker run --detach --name some-mariadb --env MARIADB_ROOT_PASSWORD=my-secret-pw mariadb:latest
docker run -d --env MARIADB_ROOT_PASSWORD=123 mariadb:latest




mariadb -u <user> -p



mariadb -u root -p123

mariadb -u root -p
123

Sequence for practice of SQL Commands
1. Show database;
2. create database a_db;
3. show databases;
4. go inside database
	use <dbName>;
	use a_db;
5. show tables;
6. create table <tableName>(
	colname datatype,
	colname datatype
   );
7. show tables;
8. describe <tablename>;
   desc     <tablename>
   explain  <tablename>

9. insert into <tableName>;
10. select * from <tableName>;



CLI = Command Line Interface   
GUI = Graphical User Interface i.e PhpMyAdmin

Lets setup the GUI PHPMYADMIN

a_db  --- CLI
b_db  ---- GUI

docker run -d \
  --name phpmyadmin \
  --link confident_panini:db \
  -p 8080:80 \
  -e PMA_HOST=db \
  -e PMA_PORT=3306 \
  phpmyadmin:latest

DevOps Course
Buy Server from Contabo for 1 year
Credit Cards


International Debit Card
VISA/Mastercard


MasterCard Debit International Enable
VISA Debit International Enable


Control Panel
1. Ubuntu 24.x



5-10min.


.SHxq%K.@W5C=   ----> 123  	    (Terminal)
		----> aQvvAeW8P~C/  (CP)
I want to change my server password ?
1. Control Panel
	
2. Terminal
	2.1 passwd 
		newpass
		confirmpass

ssh root@185.217.126.127
How to handle "REMOTE HOST IDENTIFICATION HAS CHANGED! " Error ?

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

ssh-keygen -R 185.217.126.127


MOTD
Motivation Of the Day

vim /etc/motd

Welcome to Ubuntu 22.04.5 LTS (GNU/Linux 5.15.0-25-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro
New release '24.04.2 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

  _____
 / ___/___  _  _ _____ _   ___  ___
| |   / _ \| \| |_   _/ \ | _ )/ _ \
| |__| (_) | .` | | |/ _ \| _ \ (_) |
 \____\___/|_|\_| |_/_/ \_|___/\___/

Welcome!

This server is hosted by Contabo. If you have any questions or need help,
please don't hesitate to contact us at support@contabo.com.

Last login: Wed Jul 16 04:55:46 2025 from 171.60.152.182




How to login to a server without password ?
How to you can use password less authentication ?

1. using id_rsa file.

You need ssh keypair 
1. Public Key  id_rsa.pub  (Remote Server)   ----> ~/.ssh/authorized_keys
2. Privat Key  id_rsa      (local Machine) 
	

I want to generate a ssh key pair

ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

command -flag1 flag1Value -flag2 flag2Value -flag3 flag3Value
command --help

Setup phpMyAdmin(pma+mysqldb) on a subdomain with https

https://pma.snenmh.xyz

Reverse Proxy

https://pma.snenmh.xyz   ---->  https://ip:8080  

ping pma.snenmh.xyz -t

pma = phpmyadmin



=CG?X6rqs77UA?

docker run -d --env MARIADB_ROOT_PASSWORD=123 mariadb:latest
docker run -d -p 9092:80 -e PMA_HOST=adoring_mcnulty -e PMA_PORT=3306 phpmyadmin:latest

docker run -d -p 9091:80 -e PMA_HOST=localhost -e PMA_PORT=3306 phpmyadmin:latest

docker run -d -p 9090:80 -e PMA_HOST=db -e PMA_PORT=3306 phpmyadmin:latest

HTTP  = 80
HTTPS = 443

How to create Docker Image using Dockerfile ?
Dockerfile  --> Docker Image ----> Container1,2,3,4,5

Dockerfile is a simple test file 
Instruction 

EXPOSE = OPEN

How to get Automatic SSL Certificate when Container is up and running?


185.217.126.127
?!n2aD=3,@^knp


Dockerfile  ----ImageBuild-----> Docker Image


anil:t1


1. docker image build -t account/image:tag dir
2. docker image build -t oklabs/anil:t2
3. docker image ls
3  docker images
4. docker run --restart=always -p 7071:80 -d oklabs/anil:t2



How to get Automatic SSL Certificate when Container is up and running?

1. DNS Panel -> A Record --> ServerIP

	msg.snenmh.xyz --->  185.217.126.127

2. Server Format
3. 



,e.tB3vk&aa

docker run -p 8000:80 -it -u root --privileged -d ubuntu:latest


1. Docker
2. DOcker-compose

apt update && apt upgrade -y

Shell Scripting

.env
setup.sh

w3xXM8k+?4v

1. apt update -y && apt upgrade -y
2. docker --version
3. docker-compose version


dpkg = Debian Package

apt install docker.io docker-compose -y



Dockerfile

docker image build  ---> Dockerfile           ---> Image build

docker-compose      ---> docker-compose.yaml  ---> Container

docker-compose -f docker-compose.yaml up -d --build


docker run -p 8000:80 -it -u root --privileged -d ubuntu:latest



docker-compose -f docker-compose.yaml up -d --build


docker run Vs docker-compose

  Avoid          Correct

docker-compose (Yaml)   -----> K8s (Yaml File)


How to provision MySQL and PhpMyAdmin with Docker Compose ?

185.217.126.127

MySQL - Database(Parent)
PMA   - GUI     (Child)

PostGres -  Database
PGAdmin  -  GUI

Provision your Apps with Centralized .env file

What is .env ?
What we can do with .env ?

You can store your constants/Variable .

.env file

Provision MySQL and PMA using Docker compose with .env?


MySQL Constants ?
	MYSQL_ROOT_PASSWORD: rootpassword                                                                 	MYSQL_DATABASE: mydb                                                                              	MYSQL_USER: myuser                                                                                	MYSQL_PASSWORD: mypassword
PMA Constant ?
	PMA_HOST: mysql                                                                                   	PMA_PORT: 3306
      	PMA_USER: root
      	PMA_PASSWORD: rootpassword


MySQL - Database(Parent)
PMA   - GUI     (Child)

PostGres -  Database
PGAdmin  -  GUI

MongoDB -  Database
MongoDBAlasin  -  GUI

Redis  	    -  Database
RedisInsite - GUI

Stop   -> Remove

docker-compose -f docker-compose.yaml up -d --build


Server

Contabo.com

185.217.126.127
kST2qh%.)KD
username = root

1. Cpanel Login
2. Server Format/Reinstall
3. Select Linux OS  -> Ubuntu
	Android OS -> KitKat,Lolipop,Donugt,

4. Pending ------> Running   -------> finished (5min)
5. Win + R ------> Run Utility
6. cmd  -> enter
7. Ping the server
   7.1 ping serverip -t
       ping 185.217.126.127 -t
8. If you are getting reply then you can login to server
9. How to login with your server?

    ssh username@ip
    ssh root@185.217.126.127
10. If you see "REMOTE HOST IDENTIFICATION HAS CHANGED!" 
   10.1 ssh-keygen -R 185.217.126.127
   10.2 root@185.217.126.127

11. Check your OS ?
	cat /etc/os-release
12. Update/Upgrade Your OS ?

13. Install Docker ?	

cls command is used to clear the console


cls  -> Windows OS Console Clear
clear-> Linux OS Console Clear


Terminal/Console

clear 
Ctrl + L


SeverBUY --> Contabo.com --> Physical Server ---> OS -> Ubuntu 22.x


HostOS 




Update your OS ?
	apt update -y
Upgrade Your OS ?
	apt upgrade -y

apt - Advanced Package Tool


Install Docker 

Docker provide us Virtual OS 

HostOS  -> VirtualOS+Apps (Docker)

HostOS + Apps

How to install Docker ?

apt install docker.io 
apt install docker-compose -y


docker --version
27.5.1
MajorNo.MinorNo.PatchNo

docker-compose --version
1.29.2




apt install from which location which website ?

http://archive.ubuntu.com/ubuntu
http://security.ubuntu.com/ubuntu

https://hub.docker.com/
create account on this wegbsite

The most important files for any docker application

How to show all containers ?
docker container ps -a
docker ps -a



1. Create a centralized .env
2. docker-compose.yaml
3. Dockerfile
4. entrypoint.sh

How to provision/deployment PostGres and PGAdmin using docker compose ?

PostGres -  Database
PGAdmin  -  GUI

Go to docker registry

docker-compose -f docker-compose.yaml up -d --build

If your docker container is failing.
You need to check its log


docker logs -f <contName/contId>

How to stop all docker container in a single command ?
docker container stop $(docker ps -aq)



0.0.0.0:8080->8080/tcp




Provision MongoDB and MongoDB Compass with DockerCompose using .env using HTTPS?
Reverse Proxy

https://mongo.snenmh.xyz

https://subdomain.primarydomain.tld

https://www.amazon.in
https://www.flipkart.com


https://mongo.snenmh.xyz  -----> MongoDB Compass
version: '3.8'

services:
  mongodb:
    image: bitnami/mongodb:latest
    container_name: mongodb
    environment:
      - MONGODB_ROOT_USER=root
      - MONGODB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/bitnami/mongodb
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    ports:
      - "8081:8081"

volumes:
  mongodb_data:


Port No Range ?
0- 65335
"8081:8081"
  "HP:CP"
HP = Host Port
CP = Container Port
vim ?
vi 
Visual Editor Improved

docker-compose -f docker-compose.yaml up -d --build

https://mongo.snenmh.xyz  -----> MongoDB Express
A Record in DNS Panel     -----> 185.217.126.127:8081


mongodb://root:12345678@185.217.126.127:27017


Database ---> Table ----> Data
Database ---> Collection ----> Anil Dollor

SQL   -> Table
NoSQL -> Collection


a_db (GUI)
	a_tbl  
b_db (CLI)
	b_tbl


185.217.126.127
4kP(HF5W~^%S%

Create backup script of database

Live Project
1. Backup Strategy


Database Backup ? Save ?
db.sql -> 200MB (49MP x 5)


1. Telegram  UNLIMITE data < 50MB
	8:00 AM
	14:00 PM
	20:00 PM

2. Telegram BOT
3. BotFather (v)
4. /newbot
5. dbbackup_bot
6. anil_dbbackup_bot

Bot Token ?
8096341529:AAFt4mMWlDLk1gPIa2Mu2awqpNBSqMTOvvQ
CHAT_ID  ?
https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates


What is PostMan 

Postman is api testing tool
Api ? 
Application Programing Interface


volumes:
      - ./northwind.sql:/docker-entrypoint-initdb.d/northwind.sql
		     HV:CV




Mongodb Compass(Local Laptop) ---------------------------------> Mongodb(Server)

How to connect your MySQL/MariaDB/Postgress from Local Workbench?


MySQL Workbench(Local Laptop) ---------------------------------> MySQL(Server)
 0.0.0.0:3306->3306/tcp
	   HP->CP

Port Mapping


Telegram Backup Part 2

MySQL + PMA + Workbench

PMA (Website)
Workbench (Local Software)


MongoDB Compass (Local Software)


185.217.126.127
j5-:k#Px@=88A!


1. Create a centralized .env
2. docker-compose.yaml
3. Dockerfile
4. entrypoint.sh



.env
	CONSTANT


If you want to connect MySQL/Mariab/Postgress from local system


Laptop -----------------------------> 185.  (MySQL)
LocalSoft
Workbench --------------------------> 185.x.x.x:3306

You have do Port Mapping

HP:CP
HostPort:ContainerPort
    3306:3306


root
notSecureChangeMe


rakesh_user
rakesh_password


120017558  -------------> 114.4
Byte ---> KiloByte -----> MegaByte
	1024

185.217.126.127
g$bX$7,Pf2W




We want database backup everyday at 
8:00
14:00
20:00
?


Backup Script that 
1. dump sql  350mb
2. Highly Compress Zip  --> 30mb
3. Split into 49mb




How to connect PostGressDB with PGAdmin Locally.

185.217.126.127
ia#tmNe546oJdt 


PGAdmin GUI
1. Website -> pGAdmin/Adminer
2. Desktop Software

If you want to connect your Db with External Client
1. You have to open DB Port (Port Mapping)

ports:                                                                                                                 - "5432:5432"
     HP:CP

How to create CI/CD pipeline using Jenkins(Website) ?

CI/CD ?

GitHub ----> Public Link ---> https://asdksdf.githb.com

User --->SourceCode ------->Github----CI/CD-->Public Link (https://)

CI = Continuous Integration
CD = Continuous Delivery


What is the purpose of Ci/CD pipeline ?
1. To provide Public Endpoint


How you can create your own custom CI/CD Pipeline ?

Jenkins 
?
Free
OpenSource


Jenkins Vs Atlassian Bamboo


How to deploy Jenkins on our server 185.x.x.x

Docker ?

Docker Registry --> Jenkins Image

https://hub.docker.com



Docker PPT Sheet No 329

Docker PPT Sheet No 173

docker run -p 8080:8080 -d  account/image:tag
docker run -p 9090:8080 -d  jenkins/jenkins:latest

1. Docker run
2. Docker Compose ----> docker-compose.yaml



185.217.126.127
P.574c4F2(Vi=

Create a Simple CI/CD Pipeline using Jenkins Part 1


docker run -p 8080:8080 -d  jenkins/jenkins:latest

Jenkins Password?
1. docker logs
2. Go inside docker container


How to go inside container ?
docker container exec
docker exec

bash ?
Shell
Bourn Again Shell


User -----Push-----> Github------Webhook------>(Jenkins)http://185.217.126.127:8080/github-webhook/

Code---------------> Github

http://<jenkins-server-host>/github-webhook/


Lets Create Jenkins CI/CD Pipeline

Jenkins JOBS

Jenkinsfile ------> Define your Pipeline


Dockerfile ------> DockerImage



How to define Instructions for Jenkins Pipeline?
1. Dashboard --> Setup Pipeline -> Instruction
2. Create a file Called "Jenkinsfile" at the root level of project directory


185.217.126.127
*-q$K,j=ST4~


Declarative Pipeline.


pipeline > stages > Stage >  Step

Jenkins Pipeline Workspace ?


jenkins@b9566b14daad:/$ cd /var/jenkins_home/workspace/11aug25 - cicdpipeline


ReactJS 	-> 	Nodejs
Django  	-> 	Python
SpringBoot 	-->	Java



Create a CI/CD Pipeline for ReactJs Application ?

docker run -p 8080:8080 -d --restart unless-stopped  jenkins/jenkins:latest



npm - node package Manager



Production Environment
1. Jenkins Server (Build Server) 185.217.126.127
2. Deploy Server                 185.217.126.127

How we deploy our App(ReactJs) ?
2. Docker Container Deploy ?
 ReactJs Container 

Dockerfile

Readymade ReactJs   --> hub.docker.com
	


docker pull account/image:tag
docker pull openeuler/react:latest


ReacJs -> 185.217.126.127:5173

8080 
3030


localhost:5173



How you can enter into the server ?
1. username password
2. password less authentication  id_rsa


185.217.126.127
root
%ncjrW:2U@!


anil.txt  -> hello


SSH Agent Plugin:


generate your ssh-keypair

ssh-keygen -t rsa -b 4096 -C "jenkins"



ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCtH9WEVE/u01UAeOeKnQ9Hq76QYIvlTkruezoOLh+j1uEi8OtLOrurYk/ecCoVWRisIN3D6AnuXrfSVgblPFsj5PPTXyVeiUtMaCTqeVxZgcsK0BhnVmyL9l2RO5n6h2M4xCDnrzrWspssJSH2jxF/qFLOJ0FPPMEeb13vEJIDQ3+YfwdbpSHa+CG/LH8vW8G3cTR/cyRzs7ttxjjbog/5qFhe6KZlO7hrAme4WILWXPQM1YEIidcsqkgphHTdoVlwQtH7/GRMStN4tCzyFjR4u9aM6ELNF6vX5NCHnXglzRfUBBIaInaRdGoTTmOfYEHAXq2//8KJYEZ8PMC1tq+mDgMWeDSgo4u4OonOJhpbz+BRm6jMrSuM3f/nDZFw7sgbBrS54+kLhKcTtqeJQwX1/G+ETsRN97tWuG3u2ovMSEKNKU6AzhCbg5mD39hMT/uWJ9gZtbm/hl+h9qC06tkuowOO7mwyFZvIMvp7WFffBd9o+CeJvlJQiWENl5WbZmKbu9aqmZytN6C4gyLI1dVxmZbxmZCs/hghjb7hN4sxcXa3HtUQX6oFNvZf9FoemziqOudv8LaHcI3vrF25CSVv5KGwyNw97nI3jIKyjbQt2AU4kOleY/LKQeuhYj/HJ1cFR6Pxk/Zpgfkg3PkAMndvpROqYEXqCCwLdPq28K2DaQ== Jenkins




.ssh/authorized_keys

/root/.ssh/authorized_keys

docker pull coderenterprise/react
docker pull dongbbb/blog-react


docker run -d --restart unless-stopped -p 9090:80 dongbbb/blog-react:latest


docker pull openeuler/react:19.1.1-oe2403sp1

docker run -d --restart unless-stopped -p 9091:80 openeuler/react:19.1.1-oe2403sp1
docker run -d --restart unless-stopped -p 9094:80 thanhlep/reactjs-web
docker pull recipeyak/react:203be8e9ce1bbf507af56f98cfdf259e1eae659d



docker run -d --restart unless-stopped -p 9094:80 thanhlep/reactjs-web
docker run -d --restart unless-stopped -p 9095:5173 thanhlep/reactjs-web


docker run -d -p 3000:3000 --restart unless-stopped openeuler/react:latest

docker run -d -p 8080:80 --restart unless-stopped alekzonder/react-nginx


185.217.126.127
root
%ncjrW:2U@!


How to upload your own docker image and upload to Docker Hub ?


1. Create a Dockerfile
2. Create an Image from Dockerfile

	Dockerfile -----Image Build-----> Docker Image ---> DockerHub

	docker image build -t account/ImageName:TagName dir
	docker image build -t oklabs/22aug2025:t1 .
3. docker login
4. docker image push
	docker image push oklabs/22aug2025:t1

oklabs

PULL = Download
PUSH = Upload

https://jennykibiri.hashnode.dev/jenkins-pipeline-to-build-and-deploy-a-frontend-application-on-aws-ec2




1. Create a centralized .env
2. docker-compose.yaml
3. Dockerfile
4. entrypoint.sh
5. Project


Dockerfile ---> Docker Image -----> Docker Container1, Contianer2, ...

docker run -d -p 8080:80 oklabs/image1:tag2

185.217.126.127
root
cDV23@q^,2j#M_


docker run -p 8080:8080 -d --restart unless-stopped  jenkins/jenkins:latest



docker run -p 9090:80 -d --restart unless-stopped  oklabs/image:tag1

http://185.217.126.127:8080/   ->     aug25-2025.snenmh.xyz


ReverseProxy
https://aug25-2025.snenmh.xyz/  ->   http://185.217.126.127:9090/



185.217.126.127
root
cDV23@q^,2j#M_


Lets create a Frontend ReactJS Application Docker Container

We are installing ReactJs Application directly on Host Machine


npm run dev -- --host 0.0.0.0

docker image build -f Dockerfile.reactjs -t oklabs/image:tag1 .
docker run -p 9090:80 -d --restart unless-stopped  oklabs/image:tag1

# -------------------
# Stage 1: Build
# -------------------
FROM node:20 AS build

# Set working directory
WORKDIR /app

# Copy package.json and lock file first (better caching)
COPY frontend/package*.json ./

# Install dependencies
RUN npm install

# Copy project files
COPY frontend/ .

# Build the React app
RUN npm run build

# -------------------
# Stage 2: Run (Nginx)
# -------------------
FROM nginx:stable-alpine

# Remove default Nginx static files
RUN rm -rf /usr/share/nginx/html/*

# Copy built React app from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy custom nginx config (optional)
# COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]



FROM node:20

# Set working directory
WORKDIR /app

# Copy package.json and install deps
COPY frontend/package*.json ./
RUN npm install

185.217.126.127
root
_7MJ$d9=CXt:T





2. Create your first backend container using Strapi CMS ?
   CMS = Content Management System
 Backend System


1. Create a centralized .env
2. docker-compose.yaml
3. Dockerfile
4. entrypoint.sh
5. project
	5.1 frontend
	5.2 backend
6. Jenkinsfile
7. .dockerignore


docker-compose.yaml
Dockerfile.strapi
entrypoint.sh
.env
Jenkinsfile
project


docker image build -f Dockerfile.strapi -t oklabs/strapi:v5_n20_1 .

To build and run a container
1. Docker Compose
2. Docker run
	docker run -p 1337:1337 -d --restart unless-stopped oklabs/strapi:v5_n20_1


COPY S D
MV S D

docker compose -f docker-compose.yaml up -d --build

apt install docker.io docker-compose
docker-compose -f docker-compose.yaml up -d --build

# Copy project files
COPY frontend/ .

# Build React app
RUN npm run build

# Install nginx
RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

# Remove default nginx static files
RUN rm -rf /var/www/html/*

# Copy build files into nginx webroot
RUN cp -r dist/* /var/www/html/

# Expose port 80
EXPOSE 80

# Run nginx in foreground
CMD ["nginx", "-g", "daemon off;"]



185.217.126.127
root
+4XddCRj8Mw6

Frontend Framework

1. ReactJs (Meta/Facebook) -> Docker COntainer
	Javascript
	Typescript (Adv. Version Of JS)
2. AngularJs (Google) -> Docker Container
	Javascript
	TypeScript (Adv. Version Of JS)
3. VueJS 





Lets create a Frontend ReactJS Application Docker Container

1. Create a centralized .env
2. docker-compose.yaml
3. Dockerfile
4. entrypoint.sh
5. project
	5.1 frontend
	5.2 backend
6. Jenkinsfile


Docker Image -> Dockerfile ---> Docker Image -----> Docker Container

mv S D


CMD ["ng", "serve", "--host", "0.0.0.0"]

ng serve --host 0.0.0.0

docker image build -f Dockerfile.angular -t oklabs/angular:n20_1 .
docker run -p 5000:4200 -d -v $(pwd)/project/frontend:/app v /app/node_modules --restart unless-stopped  oklabs/angular:n20_1


Volume Mounting


185.217.126.127
root
+4XddCRj8Mw6

Frontend Framework

1. ReactJs (Meta/Facebook) -> Docker COntainer
	Javascript
	Typescript (Adv. Version Of JS)
2. AngularJs (Google) -> Docker Container
	Javascript
	TypeScript (Adv. Version Of JS)
3. VueJS 


1. Lets create a Frontend VueJs Application Docker Container
2. Can you create an image from running container ?

1. Create a centralized .env
2. docker-compose.yaml
3. Dockerfile
4. entrypoint.sh
5. project
	5.1 frontend
	5.2 backend
6. Jenkinsfile



Can you create an image from running container ?
Docker Image(Dockerfile) -> Docker Container(docker run)

Running Container -> Docker Image ---> Send to Docker Registry?


npm run dev -- --host 0.0.0.0

docker image rmi $(docker images -q)


docker image build -f Dockerfile.vuejs -t oklabs/vuejs:n20_1 .

docker run -p HP:CP
docker run -p 5000:8080 -d -v $(pwd)/project/frontend:/app -v /app/node_modules --restart unless-stopped  oklabs/vuejs:n20_1


docker run -p 5173:5173 -d -v $(pwd)/project/frontend:/app -v /app/node_modules --restart unless-stopped  oklabs/vuejs:n18_1

185.217.126.127
root
j_Q,un:7qu3

1. How to create an image from running container ?
	docker container commit 
	docker commit  

	Dockerfile---->DockerImage-> DockerContainer ----> DockerImage--->DockerRegistry

2. Create your first backend container using Strapi CMS ?
   CMS = Content Management System



DockerContainer(Running) ---docker container stop--->DockerContainer(Stopped)----(docker commit) --> DockerImage




docker run -p 9090:80 -d --restart unless-stopped  oklabs/u29aug25:t1



docker container commit 


docker run -p 9090:80 -d --restart unless-stopped  oklabs/u29aug25:t1





docker run -p 7070:80 -d --restart unless-stopped  oklabs/u29aug25:t2


How to create an image from running container ?
1. Docker container stop
2. Docker container commit
3. docker login
4. docker image push
5. docker run    ---> Test


Create your first backend container using Strapi CMS ?
   CMS = Content Management System

Strapi is a backend System
Strapi is CMS (Content Management System)


Install Strapi on Host Machine

backend/npm run develop

 cat package.json

npm run develop   -> strapi develop
npm run dev   	  -> strapi develop


1337

185.217.126.127
root
B!P27v(G(U%q=


Lets deploy a backend application using Docker 
1. Strapi (CMS - Content Managmenent System)

First Install On Host and Test
Then Create via Docker

1. .env
2. docker-compose.yaml
3. Dockerfile
4. entrypoint.sh
5. project
	5.1 frontend
	5.2 backend
6. Jenkinsfile
7. .dockerignore

project/backend/package*.json ./


python3 --version
python --version  x


Nodejs  ----> Package.json
Python -----> requirements.txt

Virtual Environment

apt install python3.10-venv

Syntax
	python3 -m venv <YoutEnvName>

Example
	python3 -m venv anilvenv
	python3 -m venv vijaymyenv

	source anilvenv/bin/activate


NodeJs   Package Manager   NPM/NPX/YARN
Python   Package Manager   PIP
pip 

NodeJs
	node -v
	npm -v

Python

	python3 --version
	pip --version

3.10.12
Major.Minro.Patch


django-admin startproject backend
python3 manage.py runserver 0.0.0.0:8000


185.217.126.127
root
5lu*Wzk0JV4iqqoh


PIP
Pip Installs Packages
Python Index Packages

python3 manage.py createsuperuser



Strapi CMS   -> SQLite
Django Python WebFramework   -> SQLite/MySQL/PostGress/MongoDB



oklabs
oklabs


anil
anil

(anilvenv) root@vmi2709525:~/anil# tree
.
├── Dockerfile
├── Jenkinsfile
├── docker-compose.yaml
└── project
    ├── backend
    │   ├── anilvenv
    │   │   ├── bin
    │   │   │   ├── Activate.ps1
    │   │   │   ├── activate
    │   │   │   ├── activate.csh
    │   │   │   ├── activate.fish
    │   │   │   ├── django-admin
    │   │   │   ├── pip
    │   │   │   ├── pip3
    │   │   │   ├── pip3.10
    │   │   │   ├── python -> python3
    │   │   │   ├── python3 -> /usr/bin/python3
    │   │   │   ├── python3.10 -> python3
    │   │   │   └── sqlformat
    │   │   ├── include
    │   │   ├── lib
    │   │   ├── lib64 -> lib
    │   │   └── pyvenv.cfg
    │   └── backend
    │       ├── backend
    │       │   ├── __init__.py
    │       │   ├── __pycache__
    │       │   │   ├── __init__.cpython-310.pyc
    │       │   │   ├── settings.cpython-310.pyc
    │       │   │   ├── urls.cpython-310.pyc
    │       │   │   └── wsgi.cpython-310.pyc
    │       │   ├── asgi.py
    │       │   ├── settings.py
    │       │   ├── urls.py
    │       │   └── wsgi.py
    │       ├── db.sqlite3
    │       └── manage.py
    └── frontend




package.json   =   requirements.txt

npm            =   pip


docker compose -f docker-compose.yaml up -d --build

185.217.126.127
root
H5!8P1erySwtzhlx




1. Django + SQLite + GUI
2. Django + MySQL + PMA
3. Django + PostGress + PGAdmin


1. .env
2. docker-compose.yaml
3. Dockerfile
4. entrypoint.sh
5. project
	5.1 frontend
	5.2 backend
6. Jenkinsfile
7. .dockerignore



First Install Django on HOstmachine

pip install --upgrade pip
pip install django

1. /anil/project/backend# pip install --upgrade pip
2. /anil/project/backend# python3 -m venv anilvenv
1. /anil/project/backend# pip install django
2. /anil/project/backend# django-admin startproject backend
3. /anil/project/backend# cd backend
4. /anil/project/backend/backend# python3 manage.py runserver 0.0.0.0:8000



Install Django on Hostmachine
Install MySQL and PhpMyAdmin on Hostmachine 

1. sudo apt update && sudo apt upgrade -y
2. sudo apt install apache2 -y
2. sudo apt install mysql-server -y
3. sudo systemctl enable mysql
4. sudo systemctl start mysql
5. systemctl status mysql
5. service mysql status
6. sudo mysql_secure_installation
7. CREATE DATABASE django_db;
8. CREATE USER 'django_user'@'localhost' IDENTIFIED BY 'djangopass';
9. GRANT ALL PRIVILEGES ON django_db.* TO 'django_user'@'localhost';
10. FLUSH PRIVILEGES;
11. EXIT;
12. sudo apt install phpmyadmin -y
13. sudo ln -s /usr/share/phpmyadmin /var/www/html/phpMyAdmin
14. sudo systemctl restart apache2
15. http://185.217.126.127/phpmyadmin
16. 



touch .env docker-compose.yaml Dockerfile entrypoint.sh Jenkinsfile .dockerignore && mkdir -p project/frontend && mkdir -p project/backend



project
	5.1 frontend
	5.2 backend



docker-compose -f docker-compose.yaml up -d --build


apt install docker.io docker-compose -y


sudo curl -L "https://github.com/docker/compose/releases/download/v2.39.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

COPY project/backend /app


/app/manage.py


docker-compose ps -a

docker-compose down

docker exec -it django_app python backend/manage.py createsuperuser
